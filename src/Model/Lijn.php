<?php
/**
 * Lijn
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  District09\DeLijnCoreAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * De Lijn Kern Open Data Services (v1)
 *
 * Dit document beschrijft de kern operaties van de Open Data API (v1)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.5.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace District09\DeLijnCoreAPI\Model;

use \ArrayAccess;
use \District09\DeLijnCoreAPI\ObjectSerializer;

/**
 * Lijn Class Doc Comment
 *
 * @category Class
 * @package  District09\DeLijnCoreAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class Lijn implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Lijn';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'entiteitnummer' => 'string',
        'lijnnummer' => 'string',
        'lijnnummer_publiek' => 'string',
        'omschrijving' => 'string',
        'vervoer_regio_code' => 'string',
        'publiek' => 'bool',
        'vervoertype' => 'string',
        'bedieningtype' => 'string',
        'lijn_geldig_van' => '\DateTime',
        'lijn_geldig_tot' => '\DateTime',
        'links' => '\District09\DeLijnCoreAPI\Model\Link[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'entiteitnummer' => null,
        'lijnnummer' => null,
        'lijnnummer_publiek' => null,
        'omschrijving' => null,
        'vervoer_regio_code' => null,
        'publiek' => null,
        'vervoertype' => null,
        'bedieningtype' => null,
        'lijn_geldig_van' => 'date-time',
        'lijn_geldig_tot' => 'date-time',
        'links' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'entiteitnummer' => false,
		'lijnnummer' => false,
		'lijnnummer_publiek' => false,
		'omschrijving' => false,
		'vervoer_regio_code' => false,
		'publiek' => false,
		'vervoertype' => false,
		'bedieningtype' => false,
		'lijn_geldig_van' => false,
		'lijn_geldig_tot' => false,
		'links' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'entiteitnummer' => 'entiteitnummer',
        'lijnnummer' => 'lijnnummer',
        'lijnnummer_publiek' => 'lijnnummerPubliek',
        'omschrijving' => 'omschrijving',
        'vervoer_regio_code' => 'vervoerRegioCode',
        'publiek' => 'publiek',
        'vervoertype' => 'vervoertype',
        'bedieningtype' => 'bedieningtype',
        'lijn_geldig_van' => 'lijnGeldigVan',
        'lijn_geldig_tot' => 'lijnGeldigTot',
        'links' => 'links'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'entiteitnummer' => 'setEntiteitnummer',
        'lijnnummer' => 'setLijnnummer',
        'lijnnummer_publiek' => 'setLijnnummerPubliek',
        'omschrijving' => 'setOmschrijving',
        'vervoer_regio_code' => 'setVervoerRegioCode',
        'publiek' => 'setPubliek',
        'vervoertype' => 'setVervoertype',
        'bedieningtype' => 'setBedieningtype',
        'lijn_geldig_van' => 'setLijnGeldigVan',
        'lijn_geldig_tot' => 'setLijnGeldigTot',
        'links' => 'setLinks'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'entiteitnummer' => 'getEntiteitnummer',
        'lijnnummer' => 'getLijnnummer',
        'lijnnummer_publiek' => 'getLijnnummerPubliek',
        'omschrijving' => 'getOmschrijving',
        'vervoer_regio_code' => 'getVervoerRegioCode',
        'publiek' => 'getPubliek',
        'vervoertype' => 'getVervoertype',
        'bedieningtype' => 'getBedieningtype',
        'lijn_geldig_van' => 'getLijnGeldigVan',
        'lijn_geldig_tot' => 'getLijnGeldigTot',
        'links' => 'getLinks'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const VERVOERTYPE_BUS = 'BUS';
    public const VERVOERTYPE_TRAM = 'TRAM';
    public const VERVOERTYPE_METRO = 'METRO';
    public const VERVOERTYPE_TREIN = 'TREIN';
    public const VERVOERTYPE_ALLE = 'ALLE';
    public const BEDIENINGTYPE_NORMAAL = 'NORMAAL';
    public const BEDIENINGTYPE_SNELDIENST = 'SNELDIENST';
    public const BEDIENINGTYPE_SCHOOLBUS = 'SCHOOLBUS';
    public const BEDIENINGTYPE_FABRIEKSLIJN = 'FABRIEKSLIJN';
    public const BEDIENINGTYPE_TECHNISCHE_LIJN = 'TECHNISCHE_LIJN';
    public const BEDIENINGTYPE_BELBUS = 'BELBUS';
    public const BEDIENINGTYPE_NACHTLIJN = 'NACHTLIJN';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getVervoertypeAllowableValues()
    {
        return [
            self::VERVOERTYPE_BUS,
            self::VERVOERTYPE_TRAM,
            self::VERVOERTYPE_METRO,
            self::VERVOERTYPE_TREIN,
            self::VERVOERTYPE_ALLE,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getBedieningtypeAllowableValues()
    {
        return [
            self::BEDIENINGTYPE_NORMAAL,
            self::BEDIENINGTYPE_SNELDIENST,
            self::BEDIENINGTYPE_SCHOOLBUS,
            self::BEDIENINGTYPE_FABRIEKSLIJN,
            self::BEDIENINGTYPE_TECHNISCHE_LIJN,
            self::BEDIENINGTYPE_BELBUS,
            self::BEDIENINGTYPE_NACHTLIJN,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('entiteitnummer', $data ?? [], null);
        $this->setIfExists('lijnnummer', $data ?? [], null);
        $this->setIfExists('lijnnummer_publiek', $data ?? [], null);
        $this->setIfExists('omschrijving', $data ?? [], null);
        $this->setIfExists('vervoer_regio_code', $data ?? [], null);
        $this->setIfExists('publiek', $data ?? [], null);
        $this->setIfExists('vervoertype', $data ?? [], null);
        $this->setIfExists('bedieningtype', $data ?? [], null);
        $this->setIfExists('lijn_geldig_van', $data ?? [], null);
        $this->setIfExists('lijn_geldig_tot', $data ?? [], null);
        $this->setIfExists('links', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['entiteitnummer'] === null) {
            $invalidProperties[] = "'entiteitnummer' can't be null";
        }
        if ($this->container['lijnnummer'] === null) {
            $invalidProperties[] = "'lijnnummer' can't be null";
        }
        if ($this->container['lijnnummer_publiek'] === null) {
            $invalidProperties[] = "'lijnnummer_publiek' can't be null";
        }
        if ($this->container['omschrijving'] === null) {
            $invalidProperties[] = "'omschrijving' can't be null";
        }
        if ($this->container['vervoer_regio_code'] === null) {
            $invalidProperties[] = "'vervoer_regio_code' can't be null";
        }
        if ($this->container['publiek'] === null) {
            $invalidProperties[] = "'publiek' can't be null";
        }
        if ($this->container['vervoertype'] === null) {
            $invalidProperties[] = "'vervoertype' can't be null";
        }
        $allowedValues = $this->getVervoertypeAllowableValues();
        if (!is_null($this->container['vervoertype']) && !in_array($this->container['vervoertype'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'vervoertype', must be one of '%s'",
                $this->container['vervoertype'],
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['bedieningtype'] === null) {
            $invalidProperties[] = "'bedieningtype' can't be null";
        }
        $allowedValues = $this->getBedieningtypeAllowableValues();
        if (!is_null($this->container['bedieningtype']) && !in_array($this->container['bedieningtype'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'bedieningtype', must be one of '%s'",
                $this->container['bedieningtype'],
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['lijn_geldig_van'] === null) {
            $invalidProperties[] = "'lijn_geldig_van' can't be null";
        }
        if ($this->container['lijn_geldig_tot'] === null) {
            $invalidProperties[] = "'lijn_geldig_tot' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets entiteitnummer
     *
     * @return string
     */
    public function getEntiteitnummer()
    {
        return $this->container['entiteitnummer'];
    }

    /**
     * Sets entiteitnummer
     *
     * @param string $entiteitnummer entiteit nummer (key waarde)
     *
     * @return self
     */
    public function setEntiteitnummer($entiteitnummer)
    {
        if (is_null($entiteitnummer)) {
            throw new \InvalidArgumentException('non-nullable entiteitnummer cannot be null');
        }
        $this->container['entiteitnummer'] = $entiteitnummer;

        return $this;
    }

    /**
     * Gets lijnnummer
     *
     * @return string
     */
    public function getLijnnummer()
    {
        return $this->container['lijnnummer'];
    }

    /**
     * Sets lijnnummer
     *
     * @param string $lijnnummer intern lijn nummer (key waarde)
     *
     * @return self
     */
    public function setLijnnummer($lijnnummer)
    {
        if (is_null($lijnnummer)) {
            throw new \InvalidArgumentException('non-nullable lijnnummer cannot be null');
        }
        $this->container['lijnnummer'] = $lijnnummer;

        return $this;
    }

    /**
     * Gets lijnnummer_publiek
     *
     * @return string
     */
    public function getLijnnummerPubliek()
    {
        return $this->container['lijnnummer_publiek'];
    }

    /**
     * Sets lijnnummer_publiek
     *
     * @param string $lijnnummer_publiek lijn nummer zoals gekend voor de reizigerr
     *
     * @return self
     */
    public function setLijnnummerPubliek($lijnnummer_publiek)
    {
        if (is_null($lijnnummer_publiek)) {
            throw new \InvalidArgumentException('non-nullable lijnnummer_publiek cannot be null');
        }
        $this->container['lijnnummer_publiek'] = $lijnnummer_publiek;

        return $this;
    }

    /**
     * Gets omschrijving
     *
     * @return string
     */
    public function getOmschrijving()
    {
        return $this->container['omschrijving'];
    }

    /**
     * Sets omschrijving
     *
     * @param string $omschrijving omschrijving van de lijn
     *
     * @return self
     */
    public function setOmschrijving($omschrijving)
    {
        if (is_null($omschrijving)) {
            throw new \InvalidArgumentException('non-nullable omschrijving cannot be null');
        }
        $this->container['omschrijving'] = $omschrijving;

        return $this;
    }

    /**
     * Gets vervoer_regio_code
     *
     * @return string
     */
    public function getVervoerRegioCode()
    {
        return $this->container['vervoer_regio_code'];
    }

    /**
     * Sets vervoer_regio_code
     *
     * @param string $vervoer_regio_code code van de vervoerregio waar de lijn zich bevindt
     *
     * @return self
     */
    public function setVervoerRegioCode($vervoer_regio_code)
    {
        if (is_null($vervoer_regio_code)) {
            throw new \InvalidArgumentException('non-nullable vervoer_regio_code cannot be null');
        }
        $this->container['vervoer_regio_code'] = $vervoer_regio_code;

        return $this;
    }

    /**
     * Gets publiek
     *
     * @return bool
     */
    public function getPubliek()
    {
        return $this->container['publiek'];
    }

    /**
     * Sets publiek
     *
     * @param bool $publiek is de lijn toegankelijk voor het publiek
     *
     * @return self
     */
    public function setPubliek($publiek)
    {
        if (is_null($publiek)) {
            throw new \InvalidArgumentException('non-nullable publiek cannot be null');
        }
        $this->container['publiek'] = $publiek;

        return $this;
    }

    /**
     * Gets vervoertype
     *
     * @return string
     */
    public function getVervoertype()
    {
        return $this->container['vervoertype'];
    }

    /**
     * Sets vervoertype
     *
     * @param string $vervoertype het vervoerstype van de lijn
     *
     * @return self
     */
    public function setVervoertype($vervoertype)
    {
        if (is_null($vervoertype)) {
            throw new \InvalidArgumentException('non-nullable vervoertype cannot be null');
        }
        $allowedValues = $this->getVervoertypeAllowableValues();
        if (!in_array($vervoertype, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'vervoertype', must be one of '%s'",
                    $vervoertype,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['vervoertype'] = $vervoertype;

        return $this;
    }

    /**
     * Gets bedieningtype
     *
     * @return string
     */
    public function getBedieningtype()
    {
        return $this->container['bedieningtype'];
    }

    /**
     * Sets bedieningtype
     *
     * @param string $bedieningtype het bedieningtype van de lijn
     *
     * @return self
     */
    public function setBedieningtype($bedieningtype)
    {
        if (is_null($bedieningtype)) {
            throw new \InvalidArgumentException('non-nullable bedieningtype cannot be null');
        }
        $allowedValues = $this->getBedieningtypeAllowableValues();
        if (!in_array($bedieningtype, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'bedieningtype', must be one of '%s'",
                    $bedieningtype,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['bedieningtype'] = $bedieningtype;

        return $this;
    }

    /**
     * Gets lijn_geldig_van
     *
     * @return \DateTime
     */
    public function getLijnGeldigVan()
    {
        return $this->container['lijn_geldig_van'];
    }

    /**
     * Sets lijn_geldig_van
     *
     * @param \DateTime $lijn_geldig_van de start datum van de dienstregeling zoals die momenteel geldt
     *
     * @return self
     */
    public function setLijnGeldigVan($lijn_geldig_van)
    {
        if (is_null($lijn_geldig_van)) {
            throw new \InvalidArgumentException('non-nullable lijn_geldig_van cannot be null');
        }
        $this->container['lijn_geldig_van'] = $lijn_geldig_van;

        return $this;
    }

    /**
     * Gets lijn_geldig_tot
     *
     * @return \DateTime
     */
    public function getLijnGeldigTot()
    {
        return $this->container['lijn_geldig_tot'];
    }

    /**
     * Sets lijn_geldig_tot
     *
     * @param \DateTime $lijn_geldig_tot de eind datum van de dienstregeling zoals die momenteel geldt
     *
     * @return self
     */
    public function setLijnGeldigTot($lijn_geldig_tot)
    {
        if (is_null($lijn_geldig_tot)) {
            throw new \InvalidArgumentException('non-nullable lijn_geldig_tot cannot be null');
        }
        $this->container['lijn_geldig_tot'] = $lijn_geldig_tot;

        return $this;
    }

    /**
     * Gets links
     *
     * @return \District09\DeLijnCoreAPI\Model\Link[]|null
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param \District09\DeLijnCoreAPI\Model\Link[]|null $links links
     *
     * @return self
     */
    public function setLinks($links)
    {
        if (is_null($links)) {
            throw new \InvalidArgumentException('non-nullable links cannot be null');
        }
        $this->container['links'] = $links;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


